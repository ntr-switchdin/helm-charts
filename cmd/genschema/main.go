package main

import (
	"encoding/json"
	"fmt"
	"reflect"

	"github.com/invopop/jsonschema"
	"github.com/redpanda-data/helm-charts/charts/redpanda"
	"github.com/redpanda-data/helm-charts/pkg/valuesutil"
	"k8s.io/apimachinery/pkg/util/intstr"
)

func Must[T any](value T, err error) T {
	if err != nil {
		panic(err)
	}
	return value
}

func main() {
	r := &jsonschema.Reflector{
		//  These values are set to minimize the diff between the
		// handwritten jsonschema and the generated jsonschema.
		ExpandedStruct: true,
		DoNotReference: true,

		// For backwards compatibility, don't "close" our objects. There are
		// many fields that are not currently represented. Setting this to
		// false, the default and recommended value, will break many existing
		// installs. TestTemplate will catch many of these breakages.
		AllowAdditionalProperties: true,

		// jsonschema, by default, will rely on omitempty flags to determine if
		// a value is required or not. This has too much of an impact on how
		// the underlying JSON is shaped and marshalled/unmarshalled. Instead,
		// rely on explicitly set required tags.
		RequiredFromJSONSchemaTags: true,
		Mapper: func(t reflect.Type) *jsonschema.Schema {
			switch reflect.New(t).Interface().(type) {
			case *intstr.IntOrString:
				return &jsonschema.Schema{
					OneOf: []*jsonschema.Schema{
						{Type: "integer"},
						{Type: "string", Pattern: "^[0-9]+(\\.[0-9]){0,1}(k|M|G|T|P|Ki|Mi|Gi|Ti|Pi)?$"},
					},
				}

			default:
				return nil
			}
		},
	}

	schema := r.Reflect(&redpanda.Values{})

	// Leave a note to dissuade any would be manual editors.
	schema.Description = "DO NOT EDIT!. This file was generated by ./cmd/genschema/genschema.go"

	// Because of jsonschema's usage of an ordered map, the key ordering is a
	// bit strange. Round trip through an untyped map[string]any to have go
	// sort the keys alphabetically. (This helps reduce diff churn).
	untyped := Must(valuesutil.UnmarshalInto[any](schema))
	data := Must(json.MarshalIndent(untyped, "", "  "))

	fmt.Printf("%s\n", data)
}
